name: Build, Publish and Deploy
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['16']
    name: Build using Node v${{ matrix.node-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn
      - run: yarn build
        env:
          CI: true
  
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['16']
    name: Test using Node v${{ matrix.node-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn
      - run: yarn test
        env:
          CI: true
    
  publish:
    needs: [build, test]
    runs-on: ubuntu-latest
    name: Publish image to Github Packages
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Publish image to Github Packages
        uses: docker/build-push-action@v1
        with:
          username: $GITHUB_ACTOR
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: kbve/api.discord.sh/api.discord.sh
          tag_with_sha: true
          tag_with_ref: true
  
  pkgpull:
    needs: [publish]
    runs-on: ubuntu-latest
    name: Package Pull to Host
    steps:
      - name: Acquire short form sha variable
        id: vars
        run: echo "::set-output name=sha_short::$(echo ${{ github.sha }} | cut -b 1-7)"
      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            ls
            mkdir -p ~/kbve/gitaction/${{ github.sha }} && cd "$_"
            wget https://raw.githubusercontent.com/KBVE/archive/main/sh/discord.sh/discord.sh
            chmod +x ./discord.sh
            ./discord.sh --webhook-url="${{ secrets.DISCORD_WEBHOOK }}" --username "DickerTheDocker" --avatar "https://i.imgur.com/E5P5lb1.jpg" --text "Created Folder /kbve/gitaction/${{ github.sha }}"
            echo "docker rm ghcr.io/kbve/api.discord.sh/api.discord.sh:sha-${{ steps.vars.outputs.sha_short }};" >> ./cleanup.sh
            chmod +x ./cleanup.sh
            ./discord.sh --webhook-url="${{ secrets.DISCORD_WEBHOOK }}" --username "DickerTheDocker" --avatar "https://i.imgur.com/E5P5lb1.jpg" --text "Created Cleanup.sh for ${{ steps.vars.outputs.sha_short }}"
            docker pull ghcr.io/kbve/api.discord.sh/api.discord.sh:sha-${{ steps.vars.outputs.sha_short }}
            ./discord.sh --webhook-url="${{ secrets.DISCORD_WEBHOOK }}" --username "DickerTheDocker" --avatar "https://i.imgur.com/E5P5lb1.jpg" --text "Pulled Docker Image for ${{ steps.vars.outputs.sha_short }}"
  
  deploy:
      needs: [pkgpull]
      runs-on: ubuntu-latest
      name: Deploy image from Host
      steps:
        - name: Acquire short form sha variable
          id: vars
          run: echo "::set-output name=sha_short::$(echo ${{ github.sha }} | cut -b 1-7)"
        - name: Executing remote ssh commands
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.KEY }}
            port: ${{ secrets.PORT }}
            script: |
              ls
              cd ~/kbve/gitaction/${{ github.sha }} 
              ./discord.sh --webhook-url="${{ secrets.DISCORD_WEBHOOK }}" --username "DickerTheDocker" --avatar "https://i.imgur.com/E5P5lb1.jpg"  --text "Attempting to run the new docker image."
              docker stop api
              docker rm api
              docker run -d -it --network app-network --name api --env NODE_ENV=production --env MONGO_URL=${{ secrets.MONGO_URL }} -p 80:3000 ghcr.io/kbve/api.discord.sh/api.discord.sh:sha-${{ steps.vars.outputs.sha_short }}
              
  deploy-status:
      needs: [deploy]
      runs-on: ubuntu-latest
      name: Deploy Status
      steps:
        - name: Acquire short form sha variable
          id: vars
          run: echo "::set-output name=sha_short::$(echo ${{ github.sha }} | cut -b 1-7)"
        - name: Executing remote ssh commands
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.KEY }}
            port: ${{ secrets.PORT }}
            script: |
              ls
              cd ~/kbve/gitaction/${{ github.sha }} 
              result=$(docker ps -q -l)
              ./discord.sh --webhook-url="${{ secrets.DISCORD_WEBHOOK }}" --username "DickerTheDocker" --avatar "https://i.imgur.com/E5P5lb1.jpg"  --text $result

  cleanup:
      needs: [deploy]
      runs-on: ubuntu-latest
      name: Cleaning up the Host
      steps:
        - name: Executing remote ssh commands
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.KEY }}
            port: ${{ secrets.PORT }}
            script: |
              ls
              cd ~/kbve/gitaction/${{ github.sha }}
              ./discord.sh --webhook-url="${{ secrets.DISCORD_WEBHOOK }}" --username "DickerTheDocker" --avatar "https://i.imgur.com/E5P5lb1.jpg"  --text "Cleaning up the environment"
              docker rm $(docker ps --filter status=exited -q)
              docker image prune -a --force --filter "until=168h"